{
    "sourceFile": "main-preDelSpliderInitWrapper.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1698951761972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1698951791462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,10 +118,9 @@\n     ;[teamSplide.item, teamSplide.prev, teamSplide.next] = teamSliderInit(teamSplide.prev, teamSplide.next)\r\n   })\r\n }\r\n function teamSliderInit(sliderClass, oldPrevHandler, oldNextHandler) {\r\n-  const splideClass = sliderClass || '.team__slider'\r\n-  const teamSlider = new Splide(splideClass, {\r\n+  const teamSlider = new Splide('.team__slider', {\r\n     arrows: false,\r\n     pagination: false,\r\n     type: 'loop',\r\n     perPage: 2,\r\n"
                },
                {
                    "date": 1698951920456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,8 +101,10 @@\n function services() {\r\n   testSliderInit()\r\n }\r\n function about() {\r\n+    console.log('vvv')\r\n+    \r\n   // showSplideMq('team__slider', mqt, '<')\r\n   testSliderInit()\r\n   // let teamSplide\r\n   let teamSplide = { item: {} }\r\n"
                },
                {
                    "date": 1698951987580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,10 +101,10 @@\n function services() {\r\n   testSliderInit()\r\n }\r\n function about() {\r\n-    console.log('vvv')\r\n-    \r\n+  console.log('vvv')\r\n+\r\n   // showSplideMq('team__slider', mqt, '<')\r\n   testSliderInit()\r\n   // let teamSplide\r\n   let teamSplide = { item: {} }\r\n"
                },
                {
                    "date": 1698951996811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,10 +101,8 @@\n function services() {\r\n   testSliderInit()\r\n }\r\n function about() {\r\n-  console.log('vvv')\r\n-\r\n   // showSplideMq('team__slider', mqt, '<')\r\n   testSliderInit()\r\n   // let teamSplide\r\n   let teamSplide = { item: {} }\r\n@@ -120,9 +118,10 @@\n     ;[teamSplide.item, teamSplide.prev, teamSplide.next] = teamSliderInit(teamSplide.prev, teamSplide.next)\r\n   })\r\n }\r\n function teamSliderInit(sliderClass, oldPrevHandler, oldNextHandler) {\r\n-  const teamSlider = new Splide('.team__slider', {\r\n+  const splideClass = sliderClass || '.team__slider'\r\n+  const teamSlider = new Splide(splideClass, {\r\n     arrows: false,\r\n     pagination: false,\r\n     type: 'loop',\r\n     perPage: 2,\r\n"
                }
            ],
            "date": 1698951761972,
            "name": "Commit-0",
            "content": "import './style.styl'\r\nimport gsap from 'gsap'\r\nimport ScrollTrigger from 'gsap/ScrollTrigger'\r\nimport Lenis from '@studio-freight/lenis'\r\nimport Splide from '@splidejs/splide'\r\nimport '@splidejs/splide/css'\r\nimport { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n\r\ngsap.registerPlugin(ScrollTrigger)\r\nconst mm = gsap.matchMedia()\r\nconst mqd = 1440\r\nconst mqt = 991\r\nconst mql = 767\r\nconst mqm = 478\r\n\r\nconst sel = (e) => document.querySelector(e)\r\nconst selAll = (e) => document.querySelectorAll(e)\r\nconst vh = (e) => window.innerHeight * (e / 100)\r\nconst vw = (e) => window.innerWidth * (e / 100)\r\n\r\nconst lenis = new Lenis()\r\nfunction raf(time) {\r\n  lenis.raf(time)\r\n  requestAnimationFrame(raf)\r\n}\r\nrequestAnimationFrame(raf)\r\n\r\nswitch (sel('.page-wrapper').getAttribute('data-page')) {\r\n  case 'home':\r\n    home()\r\n    break\r\n  case 'study':\r\n    study()\r\n    break\r\n  case 'studies':\r\n    studies()\r\n    break\r\n  case 'services':\r\n    services()\r\n    break\r\n  case 'service':\r\n    service()\r\n    break\r\n  case 'about':\r\n    about()\r\n    break\r\n  case 'blog':\r\n    blog()\r\n    break\r\n  case 'blog-post':\r\n    blogPost()\r\n    break\r\n  case 'contact':\r\n    contact()\r\n    break\r\n  case 'terms':\r\n    terms()\r\n    break\r\n  case 'error':\r\n    error()\r\n    break\r\n  default:\r\n    console.log('unknown data-page')\r\n}\r\nScrollTrigger.create({\r\n  animation: gsap.timeline().to('.navbar-sticky-wrap', { y: 0, opacity: 1 }, 0),\r\n  trigger: 'body',\r\n  start: vh(100) + ' top',\r\n  toggleActions: 'play none none reverse',\r\n})\r\n\r\nfunction home() {\r\n  mm.add('(min-width: 992px)', () => {\r\n    const propsItemsTl = gsap.from([...selAll('.props__item')], { opacity: 0, y: 100, duration: 2.5, ease: 'power4.out', stagger: 0.2 }, 0)\r\n\r\n    ScrollTrigger.create({\r\n      animation: propsItemsTl,\r\n      trigger: '.props__grid',\r\n      start: 'top center',\r\n    })\r\n  })\r\n  testSliderInit()\r\n  presenceSliderInit()\r\n  trendsSliderInit()\r\n  bumpSliderInit()\r\n  mm.add('(max-width: 991px)', () => {})\r\n  console.log('sf')\r\n}\r\n\r\nfunction study() {\r\n  studyGallerySliderInit()\r\n  studyMoreSliderInit()\r\n}\r\nfunction studies() {\r\n  testSliderInit()\r\n}\r\nfunction service() {\r\n  testSliderInit()\r\n  presenceSliderInit()\r\n}\r\nfunction services() {\r\n  testSliderInit()\r\n}\r\nfunction about() {\r\n  // showSplideMq('team__slider', mqt, '<')\r\n  testSliderInit()\r\n  // let teamSplide\r\n  let teamSplide = { item: {} }\r\n\r\n  mm.add('(min-width: 992px)', () => {\r\n    if (Object.keys(teamSplide.item).length) {\r\n      removeSplideClasses('team__slider')\r\n      teamSplide.item.destroy() // to avoid the slides width issues on viewport resize\r\n    }\r\n  })\r\n  mm.add('(max-width: 991px)', () => {\r\n    addSplideClasses('team__slider')\r\n    ;[teamSplide.item, teamSplide.prev, teamSplide.next] = teamSliderInit(teamSplide.prev, teamSplide.next)\r\n  })\r\n}\r\nfunction teamSliderInit(sliderClass, oldPrevHandler, oldNextHandler) {\r\n  const splideClass = sliderClass || '.team__slider'\r\n  const teamSlider = new Splide(splideClass, {\r\n    arrows: false,\r\n    pagination: false,\r\n    type: 'loop',\r\n    perPage: 2,\r\n    perMove: 2,\r\n    gap: '4rem',\r\n    destroy: true,\r\n    breakpoints: {\r\n      991: {\r\n        destroy: false,\r\n      },\r\n      767: {\r\n        gap: '1rem',\r\n      },\r\n      474: {\r\n        perPage: 1,\r\n        perMove: 1,\r\n      },\r\n    },\r\n  }).mount()\r\n\r\n  const [prevHandler, nextHandler] = initSplideArrows(teamSlider, '.team__arrows', oldPrevHandler, oldNextHandler)\r\n\r\n  return [teamSlider, prevHandler, nextHandler]\r\n}\r\nfunction initSplideArrows(splideItem, arrowsWrapClass = '.arrows', oldPrevHandler, oldNextHandler) {\r\n  const prev$ = sel(arrowsWrapClass + ' .arrow--left')\r\n  const next$ = sel(arrowsWrapClass + ' .arrow:not(.arrow--left)')\r\n  if (oldNextHandler) {\r\n    prev$.removeEventListener('click', oldPrevHandler)\r\n    next$.removeEventListener('click', oldNextHandler)\r\n  }\r\n  const prevHandler = () => splideItem.go('>')\r\n  const nextHandler = () => splideItem.go('<')\r\n\r\n  prev$.addEventListener('click', prevHandler)\r\n  next$.addEventListener('click', nextHandler)\r\n  return [prevHandler, nextHandler]\r\n}\r\n//\r\n// < SLIDERS -----------------------\r\n//\r\nfunction testSliderInit() {\r\n  const testSlider = new Splide('.testimonials__slider', {\r\n    arrows: false,\r\n    pagination: false,\r\n    gap: '4rem',\r\n    type: 'loop',\r\n    perPage: 2,\r\n    // focus: 'center',\r\n    // autoWidth: true,\r\n    breakpoints: {\r\n      991: {\r\n        perPage: 1,\r\n      },\r\n      767: {\r\n        gap: '1rem',\r\n      },\r\n    },\r\n    autoScroll: { speed: 1, autoStart: true },\r\n  }).mount({ AutoScroll })\r\n\r\n  sel('.testimonials__arrows .arrow--left').addEventListener('click', (e) => {\r\n    testSlider.go('+1')\r\n  })\r\n  sel('.testimonials__arrows .arrow:not(.arrow--left)').addEventListener('click', (e) => {\r\n    testSlider.go('-1')\r\n  })\r\n}\r\nfunction presenceSliderInit() {\r\n  const presenceSplide = new Splide('.presence__slider', {\r\n    arrows: false,\r\n    pagination: false,\r\n    gap: '3rem',\r\n    // type: 'loop',\r\n    perPage: 3,\r\n    // focus: 'center',\r\n    // autoWidth: true,\r\n    breakpoints: {\r\n      991: {\r\n        perPage: 2,\r\n      },\r\n      767: {\r\n        perPage: 1,\r\n      },\r\n    },\r\n  }).mount()\r\n\r\n  sel('.presence__arrows .round-arrow--left').addEventListener('click', (e) => {\r\n    presenceSplide.go('+1')\r\n  })\r\n  sel('.presence__arrows .round-arrow:not(.round-arrow--left)').addEventListener('click', (e) => {\r\n    presenceSplide.go('-1')\r\n  })\r\n}\r\n\r\nfunction trendsSliderInit() {\r\n  const trendsSplide = new Splide('.trends__slider', {\r\n    arrows: false,\r\n    pagination: false,\r\n    gap: '3rem',\r\n    perPage: 3,\r\n    // focus: 'center',\r\n    // autoWidth: true,\r\n    breakpoints: {\r\n      991: {\r\n        perPage: 2,\r\n      },\r\n      767: {\r\n        perPage: 1,\r\n        gap: '1rem',\r\n      },\r\n    },\r\n  })\r\n  if (document.readyState !== 'loading') {\r\n    initCode()\r\n  } else {\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      initCode()\r\n    })\r\n  }\r\n  function initCode() {\r\n    trendsSplide.mount()\r\n  }\r\n\r\n  sel('.trends__slider .round-arrow--left').addEventListener('click', (e) => {\r\n    trendsSplide.go('+1')\r\n  })\r\n  sel('.trends__slider .round-arrow:not(.round-arrow--left)').addEventListener('click', (e) => {\r\n    trendsSplide.go('-1')\r\n  })\r\n}\r\nfunction bumpSliderInit() {\r\n  const bumpSplide = new Splide('.bump__slider', {\r\n    arrows: false,\r\n    pagination: false,\r\n    // gap: '3rem',\r\n    type: 'loop',\r\n    perPage: 1,\r\n    // focus: 'center',\r\n    // autoWidth: true,\r\n    breakpoints: {},\r\n  }).mount()\r\n\r\n  selAll('.bump__arrows .arrow--left').forEach((e) => {\r\n    e.addEventListener('click', () => {\r\n      bumpSplide.go('+1')\r\n    })\r\n  })\r\n  selAll('.bump__arrows .arrow:not(.arrow--left)').forEach((e) => {\r\n    e.addEventListener('click', () => {\r\n      bumpSplide.go('-1')\r\n    })\r\n  })\r\n}\r\nfunction studyGallerySliderInit() {\r\n  const studyGallerySplide = new Splide('.study-gallery__slider', {\r\n    arrows: false,\r\n    pagination: false,\r\n    gap: '4rem',\r\n    type: 'loop',\r\n    perPage: 2,\r\n    focus: 'center',\r\n    drag: 'free',\r\n    breakpoints: {\r\n      991: {\r\n        perPage: 1,\r\n      },\r\n      767: {\r\n        gap: '1rem',\r\n      },\r\n    },\r\n    autoScroll: { speed: 0.5, autoStart: true },\r\n  })\r\n  const bar = studyGallerySplide.root.querySelector('.study-gallery__progress__bar')\r\n\r\n  studyGallerySplide.on('mounted active', function () {\r\n    var end = studyGallerySplide.Components.Controller.getEnd() + 1\r\n    var rate = Math.min((studyGallerySplide.index + 1) / end, 1)\r\n    bar.style.width = String(100 * rate) + '%'\r\n  })\r\n  studyGallerySplide.mount({ AutoScroll })\r\n}\r\nfunction studyMoreSliderInit() {\r\n  const studyMoreSlider = new Splide('.study-more__slider', {\r\n    arrows: false,\r\n    pagination: false,\r\n    gap: '4rem',\r\n    type: 'loop',\r\n    perPage: 2,\r\n    // focus: 'center',\r\n    // autoWidth: true,\r\n    breakpoints: {\r\n      991: {\r\n        perPage: 1,\r\n      },\r\n      767: {\r\n        gap: '1rem',\r\n      },\r\n    },\r\n  }).mount()\r\n\r\n  sel('.study-more__arrows .arrow--left').addEventListener('click', (e) => {\r\n    studyMoreSlider.go('+1')\r\n  })\r\n  sel('.study-more__arrows .arrow:not(.arrow--left)').addEventListener('click', (e) => {\r\n    studyMoreSlider.go('-1')\r\n  })\r\n}\r\n// function initSplideArrows(slider, arrowsWrap) {\r\n//   const prevHandler = () => slider.go('>')\r\n//   const nextHandler = () => slider.go('<')\r\n\r\n//   const prev$ = sel(`${arrowsWrap} .arrow--left`)\r\n//   prev$.addEventListener('click', prevHandler)\r\n//   const next$ = sel(`${arrowsWrap} .arrow:not(.arrow--left)`)\r\n//   next$.addEventListener('click', nextHandler)\r\n// }\r\nfunction removeSplideClasses(slider) {\r\n  console.log('re')\r\n\r\n  const splide = document.querySelector('.' + slider)\r\n  const track = splide.querySelector('.splide__track')\r\n  const list = splide.querySelector('.splide__list')\r\n  const slide = splide.querySelectorAll('.splide__slide')\r\n  splide.classList.remove('splide')\r\n  track.classList.remove('splide__track')\r\n  list.classList.remove('splide__list')\r\n  slide.forEach((slide) => slide.classList.remove('splide__slide'))\r\n}\r\nfunction addSplideClasses(slider) {\r\n  const splide = document.querySelector('.' + slider)\r\n  const track = splide.children[0]\r\n  const list = track.children[0]\r\n  const slide = list.childNodes\r\n  splide.classList.add('splide')\r\n  track.classList.add('splide__track')\r\n  list.classList.add('splide__list')\r\n  slide.forEach((slide) => slide.classList.add('splide__slide'))\r\n}\r\n\r\nfunction showSplideMq(splide, splideClass, breakpoint = mqt, relativeToBp = '<', arrows = false) {\r\n  let splideItem = {}\r\n\r\n  const addSplide = () => {\r\n    addSplideClasses(splideClass)\r\n    splideItem = splide(Object.keys(splideItem).length)\r\n  }\r\n  const removeSplide = () => {\r\n    if (Object.keys(splideItem).length) {\r\n      removeSplideClasses(splideClass)\r\n      splideItem.destroy() // to avoid the slides width issues on viewport resize\r\n    }\r\n  }\r\n  mm.add(`(min-width: ${breakpoint + 1}px)`, () => {\r\n    relativeToBp === '>' ? addSplide() : removeSplide()\r\n  })\r\n  mm.add(`(max-width: ${breakpoint}px)`, () => {\r\n    relativeToBp === '>' ? removeSplide() : addSplide()\r\n  })\r\n}\r\n\r\n// function showSplideOld() {\r\n//   let teamSplide = {}\r\n\r\n//   mm.add('(min-width: 992px)', () => {\r\n//     if (Object.keys(teamSplide).length) {\r\n//       removeSplideClasses('team__slider')\r\n//       teamSplide.destroy() // to avoid the slides width issues on viewport resize\r\n//     }\r\n//   })\r\n//   mm.add('(max-width: 991px)', () => {\r\n//     addSplideClasses('team__slider')\r\n//     teamSplide = teamSliderInit(Object.keys(teamSplide).length && true)\r\n//   })\r\n// }\r\n"
        }
    ]
}