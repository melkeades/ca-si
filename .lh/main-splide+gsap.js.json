{
    "sourceFile": "main-splide+gsap.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1697864777496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1697864777496,
            "name": "Commit-0",
            "content": "import './style.styl'\r\nimport gsap from 'gsap'\r\nimport ScrollTrigger from 'gsap/ScrollTrigger'\r\nimport Lenis from '@studio-freight/lenis'\r\nimport Splide from '@splidejs/splide'\r\nimport '@splidejs/splide/css'\r\nimport { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n\r\ngsap.registerPlugin(ScrollTrigger)\r\nconst mm = gsap.matchMedia()\r\n\r\nconst sel = (e) => document.querySelector(e)\r\nconst selAll = (e) => document.querySelectorAll(e)\r\nconst vh = (e) => window.innerHeight * (e / 100)\r\nconst vw = (e) => window.innerWidth * (e / 100)\r\n\r\nconst lenis = new Lenis()\r\nfunction raf(time) {\r\n  lenis.raf(time)\r\n  requestAnimationFrame(raf)\r\n}\r\nrequestAnimationFrame(raf)\r\n\r\nswitch (sel('.page-wrapper').getAttribute('data-page')) {\r\n  case 'home':\r\n    home()\r\n    break\r\n  default:\r\n    console.log('unknown data-page')\r\n}\r\nScrollTrigger.create({\r\n  animation: gsap.timeline().to('.navbar-sticky-wrap', { y: 0, opacity: 1 }, 0),\r\n  trigger: 'body',\r\n  start: vh(100) + ' top',\r\n  toggleActions: 'play none none reverse',\r\n})\r\nfunction home() {\r\n  mm.add('(min-width: 992px)', () => {\r\n    const propsItemsTl = gsap.from([...selAll('.props__item')], { opacity: 0, y: 100, duration: 2.5, ease: 'power4.out', stagger: 0.2 }, 0)\r\n\r\n    ScrollTrigger.create({\r\n      animation: propsItemsTl,\r\n      trigger: '.props__grid',\r\n      start: 'top center',\r\n    })\r\n  })\r\n\r\n  if (document.readyState !== 'loading') {\r\n    initCode()\r\n  } else {\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      initCode()\r\n    })\r\n  }\r\n  function initCode() {\r\n    // Trends slider\r\n    const trendsSplide = new Splide('.trends__slider', {\r\n      arrows: false,\r\n      pagination: false,\r\n      gap: '3rem',\r\n      perPage: 3,\r\n      breakpoints: {\r\n        991: {\r\n          perPage: 2,\r\n        },\r\n        767: {\r\n          perPage: 1,\r\n          gap: '1rem',\r\n        },\r\n      },\r\n    })\r\n    trendsSplide.on('mounted', () => {\r\n      setTimeout(trendsStInit, 100)\r\n    })\r\n    trendsSplide.mount()\r\n  }\r\n\r\n  sel('.trends__slider .round-arrow--left').addEventListener('click', (e) => {\r\n    trendsSplide.go('+1')\r\n  })\r\n  sel('.trends__slider .round-arrow:not(.round-arrow--left)').addEventListener('click', (e) => {\r\n    trendsSplide.go('-1')\r\n  })\r\n  function trendsStInit() {\r\n    console.log('fd')\r\n\r\n    mm.add('(min-width: 992px)', () => {\r\n      const trendsCardsTl = gsap.from([...selAll('.trends__card')], { opacity: 0, y: 100, duration: 1.5, ease: 'power1.out', stagger: 0.6 }, 0)\r\n      ScrollTrigger.create({\r\n        animation: trendsCardsTl,\r\n        trigger: '.trends__slider',\r\n        start: 'top center',\r\n      })\r\n    })\r\n  }\r\n\r\n  mm.add('(max-width: 991px)', () => {})\r\n  console.log('sf')\r\n}\r\n\r\nfunction event() {}\r\nconst testSlider = new Splide('.testimonials__slider', {\r\n  arrows: false,\r\n  pagination: false,\r\n  gap: '4rem',\r\n  type: 'loop',\r\n  perPage: 2,\r\n  // focus: 'center',\r\n  // autoWidth: true,\r\n  breakpoints: {\r\n    991: {\r\n      perPage: 1,\r\n    },\r\n    767: {\r\n      gap: '1rem',\r\n    },\r\n  },\r\n  autoScroll: { speed: 1, autoStart: false },\r\n}).mount({ AutoScroll })\r\n\r\nsel('.testimonials__arrows .arrow--left').addEventListener('click', (e) => {\r\n  testSlider.go('+1')\r\n})\r\nsel('.testimonials__arrows .arrow:not(.arrow--left)').addEventListener('click', (e) => {\r\n  testSlider.go('-1')\r\n})\r\n\r\nconst presenceSplide = new Splide('.presence__slider', {\r\n  arrows: false,\r\n  pagination: false,\r\n  gap: '3rem',\r\n  // type: 'loop',\r\n  perPage: 3,\r\n  // focus: 'center',\r\n  // autoWidth: true,\r\n  breakpoints: {\r\n    991: {\r\n      perPage: 2,\r\n    },\r\n    767: {\r\n      perPage: 1,\r\n    },\r\n  },\r\n}).mount()\r\n\r\nsel('.presence__arrows .round-arrow--left').addEventListener('click', (e) => {\r\n  presenceSplide.go('+1')\r\n})\r\nsel('.presence__arrows .round-arrow:not(.round-arrow--left)').addEventListener('click', (e) => {\r\n  presenceSplide.go('-1')\r\n})\r\n\r\nconst bumpSplide = new Splide('.bump__slider', {\r\n  arrows: false,\r\n  pagination: false,\r\n  // gap: '3rem',\r\n  type: 'loop',\r\n  perPage: 1,\r\n  // focus: 'center',\r\n  // autoWidth: true,\r\n  breakpoints: {},\r\n}).mount()\r\n\r\nselAll('.bump__arrows .arrow--left').forEach((e) => {\r\n  e.addEventListener('click', () => {\r\n    bumpSplide.go('+1')\r\n    console.log('fd')\r\n  })\r\n})\r\nselAll('.bump__arrows .arrow:not(.arrow--left)').forEach((e) => {\r\n  e.addEventListener('click', () => {\r\n    bumpSplide.go('-1')\r\n    console.log('fd')\r\n  })\r\n})\r\n"
        }
    ]
}